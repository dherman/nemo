#!/usr/bin/env bash

{

jetson_unpack_jetson() {
  base64 --decode <<'END_BINARY_PAYLOAD'
<PLACEHOLDER_JETSON_PAYLOAD>
END_BINARY_PAYLOAD
}

jetson_unpack_shim() {
  base64 --decode <<'END_BINARY_PAYLOAD'
<PLACEHOLDER_SHIM_PAYLOAD>
END_BINARY_PAYLOAD
}

jetson_unpack_bash_launcher() {
  cat <<'END_TEXT_PAYLOAD'
<PLACEHOLDER_BASH_LAUNCHER_PAYLOAD>
END_TEXT_PAYLOAD
}

jetson_unpack_fish_launcher() {
  cat <<'END_TEXT_PAYLOAD'
<PLACEHOLDER_FISH_LAUNCHER_PAYLOAD>
END_TEXT_PAYLOAD
}

jetson_install_dir() {
  printf %s "${JETSON_HOME:-"$HOME/.jetson"}"
}

jetson_create_tree() {
  local INSTALL_DIR

  INSTALL_DIR="$(jetson_install_dir)"

  mkdir -p "${INSTALL_DIR}"

  # ~/
  #     .jetson/
  #         cache/
  #             node/
  #         tools/
  #             inventory/
  #                 node/
  #                 packages/
  #                 yarn/
  #             image/
  #                 node/
  #                 yarn/
  #             user/
  #         bin/
  #         tmp/

  mkdir -p "${INSTALL_DIR}"/cache/node
  mkdir -p "${INSTALL_DIR}"/tools/inventory/node
  mkdir -p "${INSTALL_DIR}"/tools/inventory/packages
  mkdir -p "${INSTALL_DIR}"/tools/inventory/yarn
  mkdir -p "${INSTALL_DIR}"/tools/image/node
  mkdir -p "${INSTALL_DIR}"/tools/image/yarn
  mkdir -p "${INSTALL_DIR}"/tools/user
  mkdir -p "${INSTALL_DIR}"/bin
  mkdir -p "${INSTALL_DIR}"/tmp
}

jetson_create_binaries() {
  local INSTALL_DIR

  INSTALL_DIR="$(jetson_install_dir)"

  jetson_unpack_jetson        > "${INSTALL_DIR}"/jetson
  jetson_unpack_shim          > "${INSTALL_DIR}"/shim
  jetson_unpack_bash_launcher > "${INSTALL_DIR}"/load.sh
  jetson_unpack_fish_launcher > "${INSTALL_DIR}"/load.fish

  # Remove any existing binaries for tools so that the symlinks can be installed
  # using -f so there is no error if the files don't exist
  rm -f "${INSTALL_DIR}"/bin/node
  rm -f "${INSTALL_DIR}"/bin/npm
  rm -f "${INSTALL_DIR}"/bin/npx
  rm -f "${INSTALL_DIR}"/bin/yarn

  for FILE_NAME in "${INSTALL_DIR}"/bin/*; do
    if [ -e "${FILE_NAME}" ] && ! [ -d "${FILE_NAME}" ]; then
      rm -f "${FILE_NAME}"
      ln -s "${INSTALL_DIR}"/shim "${FILE_NAME}"
    fi
  done

  ln -s "${INSTALL_DIR}"/shim "${INSTALL_DIR}"/bin/node
  ln -s "${INSTALL_DIR}"/shim "${INSTALL_DIR}"/bin/npm
  ln -s "${INSTALL_DIR}"/shim "${INSTALL_DIR}"/bin/npx
  ln -s "${INSTALL_DIR}"/shim "${INSTALL_DIR}"/bin/yarn

  chmod 755 "${INSTALL_DIR}/"/jetson "${INSTALL_DIR}/bin"/* "${INSTALL_DIR}"/shim
}

jetson_try_profile() {
  if [ -z "${1-}" ] || [ ! -f "${1}" ]; then
    return 1
  fi
  echo "${1}"
}

jetson_detect_profile() {
  if [ -n "${PROFILE}" ] && [ -f "${PROFILE}" ]; then
    echo "${PROFILE}"
    return
  fi

  local DETECTED_PROFILE
  DETECTED_PROFILE=''
  local SHELLTYPE
  SHELLTYPE="$(basename "/$SHELL")"

  if [ "$SHELLTYPE" = "bash" ]; then
    if [ -f "$HOME/.bashrc" ]; then
      DETECTED_PROFILE="$HOME/.bashrc"
    elif [ -f "$HOME/.bash_profile" ]; then
      DETECTED_PROFILE="$HOME/.bash_profile"
    fi
  elif [ "$SHELLTYPE" = "zsh" ]; then
    DETECTED_PROFILE="$HOME/.zshrc"
  elif [ "$SHELLTYPE" = "fish" ]; then
    DETECTED_PROFILE="$HOME/.config/fish/config.fish"
  fi

  if [ -z "$DETECTED_PROFILE" ]; then
    for EACH_PROFILE in ".profile" ".bashrc" ".bash_profile" ".zshrc" ".config/fish/config.fish"
    do
      if DETECTED_PROFILE="$(jetson_try_profile "${HOME}/${EACH_PROFILE}")"; then
        break
      fi
    done
  fi

  if [ -n "$DETECTED_PROFILE" ]; then
    echo "$DETECTED_PROFILE"
  fi
}

jetson_build_path_str() {
  local PROFILE
  PROFILE="$1"
  local PROFILE_INSTALL_DIR
  PROFILE_INSTALL_DIR="$2"

  local PATH_STR
  if [[ $PROFILE =~ \.fish$ ]]; then
    PATH_STR="\\nset -gx JETSON_HOME \"${PROFILE_INSTALL_DIR}\"\\ntest -s \"\$JETSON_HOME/load.fish\"; and source \"\$JETSON_HOME/load.fish\"\\n\\nstring match -r \".jetson\" \"\$PATH\" > /dev/null; or set -gx PATH \"\$JETSON_HOME/bin\" \$PATH"
  else
    PATH_STR="\\nexport JETSON_HOME=\"${PROFILE_INSTALL_DIR}\"\\n[ -s \"\$JETSON_HOME/load.sh\" ] && \\. \"\$JETSON_HOME/load.sh\"\\n\\nexport PATH=\"\${JETSON_HOME}/bin:\$PATH\""
  fi

  echo "$PATH_STR"
}

jetson_eprintf() {
  command printf "$1\n" 1>&2
}

jetson_info() {
  local ACTION
  local DETAILS
  ACTION="$1"
  DETAILS="$2"
  command printf '\033[1;32m%12s\033[0m %s\n' "${ACTION}" "${DETAILS}" 1>&2
}

jetson_error() {
  command printf '\033[1;31mError\033[0m: ' 1>&2
  jetson_eprintf "$1"
  jetson_eprintf ''
}

jetson_warning() {
  command printf '\033[1;33mWarning\033[0m: ' 1>&2
  jetson_eprintf "$1"
}

jetson_install() {
  if [ -n "${JETSON_HOME-}" ] && [ -e "${JETSON_HOME}" ] && ! [ -d "${JETSON_HOME}" ]; then
    jetson_error "\$JETSON_HOME is set but is not a directory (${JETSON_HOME})."
    jetson_eprintf "Please check your profile scripts and environment."
    exit 1
  fi

  jetson_info 'Creating' "Jetson directory tree ($(jetson_install_dir))"
  jetson_create_tree

  jetson_info 'Unpacking' "\`jetson\` executable and shims"
  jetson_create_binaries

  jetson_info 'Editing' "user profile"
  local JETSON_PROFILE
  JETSON_PROFILE="$(jetson_detect_profile)"
  local PROFILE_INSTALL_DIR
  PROFILE_INSTALL_DIR=$(jetson_install_dir | sed "s:^$HOME:\$HOME:")
  local PATH_STR
  PATH_STR="$(jetson_build_path_str "$JETSON_PROFILE" "$PROFILE_INSTALL_DIR")"

  if [ -z "${JETSON_PROFILE-}" ] ; then
    local TRIED_PROFILE
    if [ -n "${PROFILE}" ]; then
      TRIED_PROFILE="${JETSON_PROFILE} (as defined in \$PROFILE), "
    fi
    jetson_error "No user profile found."
    jetson_eprintf "Tried ${TRIED_PROFILE-}~/.bashrc, ~/.bash_profile, ~/.zshrc, ~/.profile, and ~.config/fish/config.fish."
    jetson_eprintf ''
    jetson_eprintf "You can either create one of these and try again or add this to the appropriate file:"
    jetson_eprintf "${PATH_STR}"
    exit 1
  else
    if ! command grep -qc 'JETSON_HOME' "$JETSON_PROFILE"; then
      command printf "${PATH_STR}" >> "$JETSON_PROFILE"
    else
      jetson_eprintf ''
      jetson_warning "Your profile (${JETSON_PROFILE}) already mentions Jetson and has not been changed."
      jetson_eprintf ''
    fi
  fi

  jetson_info "Finished" 'installation. Open a new terminal to start using Jetson!'
  exit 0
}

jetson_install

}
